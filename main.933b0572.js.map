{"version":3,"sources":["scripts/main.js"],"names":["columnNumber","headers","document","body","querySelectorAll","table","querySelector","tBody","rows","toSort","e","target","contains","indexOf","sort","a","b","dataA","children","textContent","dataB","Number","convertToNumber","localeCompare","forEach","item","append","string","convertedNumber","slice","split","join","head","addEventListener"],"mappings":";AAAA,aA8CC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5CD,IACIA,EADEC,EAAUC,SAASC,KAAKC,iBAAiB,MAGzCC,EAAQH,SAASC,KAAKG,cAAc,SACpCC,EAAQL,SAASC,KAAKG,cAAc,SACpCE,EAAOD,EAAMH,iBAAiB,MAIpC,SAASK,EAAOC,GACRC,IAAAA,EAASD,EAAEC,OAEZN,EAAMO,SAASD,KAIpBX,EAAe,EAAIC,GAASY,QAAQF,GAEjB,EAAIH,GAAMM,KAAK,SAACC,EAAGC,GAChCC,IAAAA,EAAQF,EAAEG,SAASlB,GAAcmB,YACjCC,EAAQJ,EAAEE,SAASlB,GAAcmB,YAE7BnB,OAAAA,GACD,KAAA,EACIqB,OAAAA,OAAOJ,GAASI,OAAOD,GAE3B,KAAA,EAIIH,OAHPA,EAAQK,EAAgBL,KACxBG,EAAQE,EAAgBF,IAI1B,QACSH,OAAAA,EAAMM,cAAcH,MAItBI,QAAQ,SAACC,GAASpB,OAAAA,EAAMqB,OAAOD,MAG5C,SAASH,EAAgBK,GACjBC,IAAAA,EAAkBD,EAAOE,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAEjDV,OAAAA,OAAOO,GApChB3B,EAAQuB,QAAQ,SAAAQ,GAAQA,OAAAA,EAAKC,iBAAiB,QAASxB","file":"main.933b0572.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst headers = document.body.querySelectorAll('th');\nlet columnNumber;\n\nconst table = document.body.querySelector('table');\nconst tBody = document.body.querySelector('tbody');\nconst rows = tBody.querySelectorAll('tr');\n\nheaders.forEach(head => head.addEventListener('click', toSort));\n\nfunction toSort(e) {\n  const target = e.target;\n\n  if (!table.contains(target)) {\n    return;\n  }\n\n  columnNumber = [...headers].indexOf(target);\n\n  const sortedList = [...rows].sort((a, b) => {\n    let dataA = a.children[columnNumber].textContent;\n    let dataB = b.children[columnNumber].textContent;\n\n    switch (columnNumber) {\n      case 2:\n        return Number(dataA) - Number(dataB);\n\n      case 3:\n        dataA = convertToNumber(dataA);\n        dataB = convertToNumber(dataB);\n\n        return dataA - dataB;\n\n      default:\n        return dataA.localeCompare(dataB);\n    }\n  });\n\n  sortedList.forEach((item) => table.append(item));\n};\n\nfunction convertToNumber(string) {\n  const convertedNumber = string.slice(1).split(',').join('');\n\n  return Number(convertedNumber);\n}\n"]}